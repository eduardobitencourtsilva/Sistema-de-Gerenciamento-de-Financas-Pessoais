package com.mycompany.sgfp.view;

import com.mycompany.sgfp.DespesasLista;
import com.mycompany.sgfp.persistencia.Despesa;
import com.mycompany.sgfp.persistencia.DespesaDAO;
import com.mycompany.sgfp.persistencia.DespesaInfo;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaRelatorioGastos extends javax.swing.JFrame {

    private void verificarPermissoes() {
        bCadastrar.setEnabled(false);
        bConfigurar.setEnabled(false);
        bExcluir.setEnabled(false);
        menuExportar.setEnabled(false);
        menuImportar.setEnabled(false);
        
        if (TelaLogin.usuario.getTipo().equals("administrador")) {
            bCadastrar.setEnabled(true);
            bConfigurar.setEnabled(true);
            bExcluir.setEnabled(true);
            menuExportar.setEnabled(true);
            menuImportar.setEnabled(true);
        }
    }
    
    public static void listar() {
        DespesaDAO dao = new DespesaDAO();
        List<Despesa> lista = dao.consultar();
        DefaultTableModel model = (DefaultTableModel) tblGastos.getModel();
        
        if (model.getRowCount() == 0) {
            for (Despesa d : lista) {
                model.addRow(new Object[]{d.getId(), d.getInfo().getNome(), d.getValor(), d.getInfo().getTipo(), d.getInfo().getCategoria(), d.getInfo().getStatus()});
            }
        }
        if (DespesasLista.listar().isEmpty()) {
            for (Despesa d : lista) {
                DespesasLista.adicionar(d);
            }
        }
    }
    
    public static void reorganizarTabela() {
        DefaultTableModel model = (DefaultTableModel) tblGastos.getModel();
        
        DespesasLista.organizar();
            
        for (int i = model.getRowCount() - 1; 0 <= i; i--) {
            model.removeRow(i);
        }
            
        listar();
    }
    /**
     * Creates new form TelaRelatorioGastos
     */
    public TelaRelatorioGastos() {
        initComponents();
        listar();
        verificarPermissoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGastos = new javax.swing.JTable();
        bCadastrar = new javax.swing.JButton();
        bConfigurar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tFiltro = new javax.swing.JTextField();
        bExcluir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuExportar = new javax.swing.JMenuItem();
        menuImportar = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SGFP - Relat처rio de gastos");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("S G F P");

        jLabel2.setText("Relat처rio de gastos");

        tblGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Despesa", "Valor", "Tipo", "Categoria", "Status"
            }
        ));
        tblGastos.setNextFocusableComponent(tFiltro);
        jScrollPane1.setViewportView(tblGastos);
        tblGastos.getAccessibleContext().setAccessibleName("Tabela de gastos");

        bCadastrar.setText("Cadastrar");
        bCadastrar.setNextFocusableComponent(bConfigurar);
        bCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarActionPerformed(evt);
            }
        });

        bConfigurar.setText("Configurar");
        bConfigurar.setNextFocusableComponent(tblGastos);
        bConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConfigurarActionPerformed(evt);
            }
        });

        jLabel3.setText("Filtro:");

        tFiltro.setNextFocusableComponent(bExcluir);
        tFiltro.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tFiltroCaretUpdate(evt);
            }
        });

        bExcluir.setText("Excluir");
        bExcluir.setNextFocusableComponent(bCadastrar);
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bConfigurar)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(164, 164, 164))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCadastrar)
                    .addComponent(bConfigurar)
                    .addComponent(jLabel3)
                    .addComponent(tFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExcluir))
                .addGap(17, 17, 17))
        );

        bCadastrar.getAccessibleContext().setAccessibleName("Bot찾o cadastrar");
        bConfigurar.getAccessibleContext().setAccessibleName("Bot찾o configurar");
        tFiltro.getAccessibleContext().setAccessibleName("Campo de texto filtro");

        jMenu1.setText("Arquivo");

        menuExportar.setText("Exportar tabela");
        menuExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExportarActionPerformed(evt);
            }
        });
        jMenu1.add(menuExportar);

        menuImportar.setText("Importar tabela");
        menuImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuImportarActionPerformed(evt);
            }
        });
        jMenu1.add(menuImportar);

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        jMenu1.add(menuSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tFiltroCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tFiltroCaretUpdate
        DefaultTableModel model = (DefaultTableModel) tblGastos.getModel();
        int count = model.getRowCount();
        
        if (tFiltro.getText().equals("") && count == 0) {
            for (Despesa d : DespesasLista.listar())
                model.addRow(new Object[]{d.getId(), d.getInfo().getNome(), d.getValor(), d.getInfo().getTipo(), d.getInfo().getCategoria(), d.getInfo().getStatus()});
        }
        
        else if (!(tFiltro.getText().equals(""))) {
            for (int i = count - 1; 0 <= i; i--) {
                model.removeRow(i);
            }
            
            for (Despesa d : DespesasLista.listar()) {
                if (d.getInfo().getCategoria().equals(tFiltro.getText())) {
                    model.addRow(new Object[]{d.getId(), d.getInfo().getNome(), d.getValor(), d.getInfo().getTipo(), d.getInfo().getCategoria(), d.getInfo().getStatus()});
                }
            }
        }
    }//GEN-LAST:event_tFiltroCaretUpdate

    private void menuExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExportarActionPerformed
        if (menuExportar.isEnabled()) {
            File file = new File("tabela.txt");
        
            if (!file.exists()) {
                try {
                    file.createNewFile();
                } catch (IOException ex) {
                    Logger.getLogger(TelaRelatorioGastos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            try {
                FileWriter fw = new FileWriter(file.getAbsoluteFile());
                BufferedWriter bw = new BufferedWriter(fw);

                bw.write("id nome valor tipo categoria status");
                bw.write("\n___________________________________\n");

                for (int i = 0; i < tblGastos.getRowCount(); i++) {
                    for (int j = 0; j < tblGastos.getColumnCount(); j++) {
                        bw.write(tblGastos.getModel().getValueAt(i, j) + " ");
                    }
                    bw.write("\n________________________________\n");
                }
                
                bw.close();
                fw.close();
                
                JOptionPane.showMessageDialog(null, "Tabela exportada com sucesso!");
            } 
            
            catch (IOException ex) {
                Logger.getLogger(TelaRelatorioGastos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_menuExportarActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuImportarActionPerformed
        if (menuImportar.isEnabled()) {
            DefaultTableModel model = (DefaultTableModel) tblGastos.getModel();
            try {
                File file = new File("tabela.txt");
                FileReader fr = new FileReader(file.getAbsoluteFile());
                BufferedReader br = new BufferedReader(fr);

                String line;

                DespesasLista.listar().clear();

                for (int i = model.getRowCount() - 1; 0 <= i; i--) {
                   model.removeRow(i);
                }

                int id = 0;

                DespesaDAO dao = new DespesaDAO();
                
                for (Despesa d : dao.consultar()) {
                    dao.excluir(d.getId());
                }
                
                while ((line = br.readLine()) != null) {
                    String[] colunas = line.split(" ");
                    if (!line.equals("id nome valor tipo categoria status") && !line.startsWith("_")) {
                        Despesa despesa = new Despesa(Double.parseDouble(colunas[2]), new DespesaInfo(colunas[1], colunas[3], colunas[4], colunas[5]));
                        despesa.setId(Integer.parseInt(colunas[0]));
                        
                        DespesasLista.adicionar(despesa);
                                         
                        dao.cadastrar(despesa);

                        id = Integer.parseInt(colunas[0]);
                    }
                }
                
                for (Despesa d : dao.consultar()) {
                    model.addRow(new Object[]{d.getId(), d.getInfo().getNome(), d.getValor(), d.getInfo().getTipo(), d.getInfo().getCategoria(), d.getInfo().getStatus()}); 
                }
                
                br.close();
                fr.close();

                JOptionPane.showMessageDialog(null, "Tabela importada com sucesso!");
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao importar tabela! " + e.getMessage());
            }
        }
    }//GEN-LAST:event_menuImportarActionPerformed

    private void bCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarActionPerformed
        if (bCadastrar.isEnabled()) {
            TelaCadastroDespesas cadastroDespesas = new TelaCadastroDespesas();
            cadastroDespesas.setVisible(true);
        }   
    }//GEN-LAST:event_bCadastrarActionPerformed

    private void bConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConfigurarActionPerformed
        if (bConfigurar.isEnabled()) {
            TelaConfiguracoes configuracoes = new TelaConfiguracoes();
            configuracoes.setVisible(true); 
        } 
    }//GEN-LAST:event_bConfigurarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        if (bExcluir.isEnabled()) {
            DefaultTableModel model = (DefaultTableModel) tblGastos.getModel();
            int row = tblGastos.getSelectedRow();
            
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Por favor selecione um registro para excluir.");
                return;
            }
            
            int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a linha " + (row + 1) + "?");
            int id = Integer.parseInt(tblGastos.getValueAt(row, 0).toString());

            if (opcao == 0) {            
                Despesa despesa = null;
                for (Despesa d : DespesasLista.listar()) {
                    if (d.getId() == id)
                        despesa = d;
                }
                if (despesa != null) {
                    DespesaDAO dao = new DespesaDAO();
                    dao.excluir(id);
                    DespesasLista.remover(despesa);                 
                }

                reorganizarTabela();
                
                DespesasLista.atualizar();

                JOptionPane.showMessageDialog(null, "Registro excluido com sucesso!");
            }
        }   
    }//GEN-LAST:event_bExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorioGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelatorioGastos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCadastrar;
    private javax.swing.JButton bConfigurar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuExportar;
    private javax.swing.JMenuItem menuImportar;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JTextField tFiltro;
    private static javax.swing.JTable tblGastos;
    // End of variables declaration//GEN-END:variables
}
